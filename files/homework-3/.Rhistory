decomposed_quarterly <- decompose(tsquarterly, type = "add")
autoplot(decomposed_quarterly)
acf(decomposed_quarterly$random, na.action = na.pass)
pacf(decomposed_quarterly$random, na.action = na.pass)
summary(ur.kpss(decomposed_quarterly$random))
decomposed_weekly <- decompose(tsweekly, type = "add")
autoplot(decomposed_weekly)
acf(decomposed_weekly$random, na.action = na.pass)
pacf(decomposed_weekly$random, na.action = na.pass)
summary(ur.kpss(decomposed_weekly$random))
acf(df$consumption)
pacf(df$consumption)
summary(ur.kpss(df$consumption))
ndiffs(df$consumption)
differ <- diff(df$consumption)
acf(differ)
pacf(differ)
summary(ur.kpss(differ))
ts_data <- ts( df$consumption, frequency = 7*24 , start = c(2016,1,1))
autoplot(ts_data)
ts_data <- ts( df$consumption, frequency = 7*24 , start = c(2016,1,1,0))
autoplot(ts_data)
ts_data <- ts( df$consumption, frequency = 7*24 , start = c(2016,1,1,0,0))
autoplot(ts_data)
autoplot(decomposed_hourly)
ts_data <- ts( df$consumption, frequency = 7*24 , start = c(2016,1))
autoplot(ts_data)
ts_data <- ts( df$consumption, frequency = 7*24 , start = c(2016))
autoplot(ts_data)
add_decomposed_data <- decompose(ts_data, type = "add")
mul_decomposed_data <- decompose(df$consumption, type = "mul")
add_decomposed_data <- decompose(ts_data, type = "add")
mul_decomposed_data <- decompose(ts_data, type = "mul")
decompose(ts_data, type = "add") %>% autoplot()
decompose(ts_data, type = "mul") %>% autoplot()
decomposed_data  <- decompose(ts_data, type = "add") %>% autoplot()
random <- decomposed_data$random
autoplot(random)
class(random)
decomposed_data  <- decompose(ts_data, type = "add")
random <- decomposed_data$random
autoplot(random)
ur.kpss(random)
acf(random, na.action = na.pass)
pacf(random, na.action = na.pass)
acf(df$consumption)
pacf(df$consumption)
summary(ur.kpss(df$consumption))
ndiffs(df$consumption)
differ <- diff(df$consumption)
acf(differ)
pacf(differ)
summary(ur.kpss(differ))
msts_cons<- msts(differ, seasonal.periods = c(24, 24*7))
autoplot(msts_cons)
decomposed <- mstl(msts_cons)
autoplot(decomposed)
str(decomposed)
random <- decomposed[,5]
autoplot(random)
acf(random, na.action = na.pass)
pacf(random, na.action = na.pass)
ts_data <- ts( differ, frequency = 7*24 , start = c(2016))
autoplot(differ)
ts_data <- ts( differ, frequency = 7*24 , start = c(2016))
autoplot(ts_data)
decompose(ts_data, type = "add") %>% autoplot()
decompose(ts_data, type = "mul") %>% autoplot()
decompose(ts_data, type = "add") %>% autoplot() %>% ur.kpss(random)
add <- decompose(ts_data, type = "add")
ur.kpss(add$random)
mul <- decompose(ts_data, type = "mul") %>% autoplot()
ur.kpss(mul$random)
add <- decompose(ts_data, type = "add")
ur.kpss(add$random)
mul <- decompose(ts_data, type = "mul")
ur.kpss(mul$random)
msts_cons<- msts(differ, seasonal.periods = c(24, 24*7))
autoplot(msts_cons)
decomposed <- mstl(msts_cons)
autoplot(decomposed)
str(decomposed)
random <- decomposed[,5]
autoplot(random)
acf(random, na.action = na.pass)
pacf(random, na.action = na.pass)
ur.kpss(random)
acf(df$consumption)
pacf(df$consumption)
summary(ur.kpss(df$consumption))
acf(df$consumption, lag = 24*7)
pacf(df$consumption, lag = 24*7)
ndiffs(df$consumption)
differ <- diff(df$consumption)
acf(differ, lag = 7*24)
pacf(differ, lag = 7*24)
summary(ur.kpss(differ))
msts_cons<- msts(differ, seasonal.periods = c(24, 24*7))
autoplot(msts_cons)
decomposed_msts <- mstl(msts_cons)
autoplot(decomposed_msts)
randommsts <- decomposed_msts[,5]
acf(randommsts, na.action = na.pass)
pacf(randommsts, na.action = na.pass)
ur.kpss(randommsts)
acf(randommsts,lag = 24*7, na.action = na.pass)
pacf(randommsts,lag = 24*7, na.action = na.pass)
ur.kpss(randommsts)
autoplot(decomposed_msts)
diffts_data <- ts( differ, frequency = 7*24 , start = c(2016))
autoplot(diffts_data)
diff_add <- decompose(diffts_data, type = "add")
ur.kpss(diff_add$random)
diff_mul <- decompose(diffts_data, type = "mul")
ur.kpss(diff_mul$random)
ts_data<- ts( df$consumption, frequency = 7*24 , start = c(2016))
autoplot(ts_data)
add <- decompose(ts_data, type = "add")
ur.kpss(add$random)
mul <- decompose(ts_data, type = "mul")
ur.kpss(mul$random)
diff_add <- decompose(diffts_data, type = "add")
ur.kpss(diff_add$random)
diff_mul <- decompose(diffts_data, type = "mul")
ur.kpss(diff_mul$random)
add <- decompose(ts_data, type = "add")
ur.kpss(add$random)
df = df %>%
mutate( season = factor(quarter))
View(df)
df = df %>%
mutate( seasons = factor(quarter, levels = c("winter","spring","summer","fall")))
View(df)
df = df %>%
mutate( seasons = factor(quarter, levels = c( 1 ="winter", 2 = "spring",3 = "summer", 4 = "fall")))
df <- read.csv("C:/Users/seyma/OneDrive/Belgeler/GitHub/spring21-seymacakir/files/homework-3/homework-3.csv", header = TRUE,sep = ",")
df  <- data.table(df)
names(df)<- c("date", "hours","consumption")
df$consumption <- as.numeric(gsub(",","", df$consumption,fixed=TRUE))
df <- unite(df,"time", 1:2, sep = " ")
df = df %>%
mutate(time = as_datetime(df$time, format = "%d.%m.%Y %H:%M")) %>%
mutate_at(vars(time), funs(year, month, quarter, week, day,hour))
df = df %>%
mutate( seasons = factor(quarter, labels = c("winter", "spring","summer", "fall")))
View(df)
df <- read.csv("C:/Users/seyma/OneDrive/Belgeler/GitHub/spring21-seymacakir/files/homework-3/homework-3.csv", header = TRUE,sep = ",")
df  <- data.table(df)
names(df)<- c("date", "hours","consumption")
df$consumption <- as.numeric(gsub(",","", df$consumption,fixed=TRUE))
df <- unite(df,"time", 1:2, sep = " ")
df = df %>%
mutate(time = as_datetime(df$time, format = "%d.%m.%Y %H:%M")) %>%
mutate_at(vars(time), funs(year, month, quarter, week, day,hour))
df = df %>%
mutate( seasons = factor(quarter, labels = c("Winter", "Spring","Summer", "Fall")))
zeroconsumpiton <- which(df$consumption == 0)[[1]]
df[zeroconsumpiton]$consumption <- (df[zeroconsumpiton-1]$consumption + df[zeroconsumpiton+1]$consumption) /2
ggplot(df, aes(x = time, y = consumption, color = seasons)) + geom_line()
ggplot(df, aes(x = time, y = consumption, color = seasons)) + geom_line() +
labs(
x = "Time",
y = "Volume of Consumption",
caption = "Electiricty Consumption of Turkey over 2016-2021"
)
ggplot(df, aes(x = time, y = consumption, color = seasons)) + geom_line() +
labs(
x = "Time",
y = "Volume of Consumption",
main = "Hourly Electiricty Consumption of Turkey over 2016-2021",
caption = "EPİAŞ"
)
ggplot(df[1:64], aes(x = time, y = consumption)) + geom_line() + theme_minimal()
ggplot(df[1:64], aes(x = time, y = consumption)) + geom_line() +
labs(
x = "Time",
Y = "Electricity Consumption",
title = "Hourly Electricity Consumption"
)+
theme_minimal()
ggplot(df[1:64], aes(x = time, y = consumption)) + geom_line() +
labs(
x = "Time",
y = "Electricity Consumption",
title = "Hourly Electricity Consumption"
)+
theme_minimal()
ggsubseriesplot(hourly) +
ylab("Volume of Hourly Electricity") +
ggtitle(" Hourly Electricity Consumption")
ggplot(df[1:64], aes(x = time, y = consumption)) + geom_line() +
labs(
x = "Time",
y = "Electricity Consumption",
title = "Hourly Electricity Consumption"
)+
theme_minimal()
decomposed_hourly <- stl(hourly)
decomposed_hourly <- stl(hourly, s.window = 24)
autoplot(decomposed_hourly)
summary(ur.kpss(remainder(decomposed_hourly)))
summary(ur.kpss(decomposed_hourly$random)
decomposed_hourly <- decompose(hourly)
decomposed_hourly <- decompose(hourly)
summary(ur.kpss(decomposed_hourly$random))
acf( df$consumption, lag = 48, na.action = na.pass)
pacf(df$consumption, lag = 48,na.action = na.pass)
ggtsdisplay(hourly)
ggtsdisplay(hourly) + ggtitle(" ACF-PACF of Hourly Electricity Consumption")
decompose(hourly, type = "add") %>% summary(ur.kpss(random))
decompose(hourly, type = "add") %>% ur.kpss(random)
decompose(hourly, type = "add")$random
ur.kpss(decompose(hourly, type = "add")$random)
summary(ur.kpss(decompose(hourly, type = "add")$random))
print("the test statistic of addtive model")
ur.kpss(decompose(hourly, type = "add")$random)
print("the test statistic of multiplicative model")
ur.kpss(decompose(hourly, type = "mul")$random)
decomposed_hourly <- decompose(hourly, type = "add")
autoplot(decomposed_hourly$random) + ggtitle(" Additve Decomposition of Hourly Consumption")
acf(decomposed_hourly$random,na.action = na.pass)
pacf(decomposed_hourly$random, na.action = na.pass)
print("the test statistic of addtive model")
ur.kpss(decompose(hourly, type = "add")$random)
print("the test statistic of multiplicative model")
ur.kpss(decompose(hourly, type = "mul")$random)
decomposed_hourly <- decompose(hourly, type = "add")
autoplot(decomposed_hourly$random)
acf(decomposed_hourly$random,na.action = na.pass)
pacf(decomposed_hourly$random, na.action = na.pass)
decomposed_hourly <- decompose(hourly, type = "add")
autoplot(decomposed_hourly)
acf(decomposed_hourly$random,na.action = na.pass)
pacf(decomposed_hourly$random, na.action = na.pass)
autoplot(tsdaily)
autoplot(tsdaily[1:10])
daily <- df %>%  group_by(year,month,day) %>% summarize(daily_consumption = sum(consumption)) %>% as.data.table()
ggplot(daily[1:10], aes(x = time, y = daily_consumption)) + geom_line() +
labs(
x = "Time",
y = "Electricity Consumption",
title = "Hourly Electricity Consumption"
)+
theme_minimal()
head(daily)
daily <- df %>%  group_by(year,month,day) %>% summarize(daily_consumption = sum(consumption)) %>% as.data.table()
ggplot(daily[1:10], aes(x = day, y = daily_consumption)) + geom_line() +
labs(
x = "Time",
y = "Electricity Consumption",
title = "Daily Electricity Consumption during 10 Days"
)+
theme_minimal()
ggplot(daily[1:21], aes(x = day, y = daily_consumption)) + geom_line() +
labs(
x = "Time",
y = "Electricity Consumption",
title = "Daily Electricity Consumption during 21 Days"
)+
theme_minimal()
daily <- df %>%  group_by(year,month,day) %>% summarize(time,daily_consumption = sum(consumption)) %>% as.data.table()
daily <- df %>%  group_by(year,month,day) %>% summarize( day = day(time),daily_consumption = sum(consumption)) %>% as.data.table()
ggplot(daily[1:21], aes(x = day, y = daily_consumption)) + geom_line() +
labs(
x = "Time",
y = "Electricity Consumption",
title = "Daily Electricity Consumption during 21 Days"
)+
theme_minimal()
daily <- df %>%  group_by(year,month,day) %>% summarize( daily_consumption = sum(consumption)) %>% as.data.table()
ggplot(daily[1:21], aes(x = day, y = daily_consumption)) + geom_line() +
labs(
x = "Time",
y = "Electricity Consumption",
title = "Daily Electricity Consumption during 21 Days"
)+
theme_minimal()
gglagplot(daily$daily_consumption)
tsdaily <- ts(daily$daily_consumption, frequency = 7, start(2016,1,1))
ggsubseriesplot(tsdaily) +
ylab("electricity") +
ggtitle(" Daily Electricity Consumption")
acf(tsdaily, max.lag = 14)
pacf(tsdaily, max.lag = 14)
gglagplot(daily$daily_consumption)
tsdaily <- ts(daily$daily_consumption, frequency = 7, start(2016,1,1))
ggsubseriesplot(tsdaily) +
ylab("electricity") +
ggtitle(" Daily Electricity Consumption")
acf(tsdaily)
pacf(tsdaily)
gglagplot(daily$daily_consumption)
tsdaily <- ts(daily$daily_consumption, frequency = 7, start(2016,1,1))
ggsubseriesplot(tsdaily) +
ylab("electricity") +
ggtitle(" Daily Electricity Consumption")
acf(daily$daily_consumption)
pacf(daily$daily_consumption)
print("the addtive model")
ur.kpss(decompose(tsdaily, type = "add")$random)
print("the multiplicative model")
ur.kpss(decompose(tsdaily, type = "mul")$random)
decomposed_daily <- decompose(tsdaily)
autoplot(decomposed_daily)
acf(decomposed_daily$random, lag = 14, na.action = na.pass)
pacf(decomposed_daily$random, lag = 14, na.action = na.pass)
weekly <- df %>%  group_by(year,week) %>% summarize(weekly_consumption = mean(consumption))
tsweekly <- ts(weekly$weekly_consumption, frequency = 53, start = c(2016,1))
autoplot(tsweekly)
autoplot(tsweekly) + ylab("Consumpotion") + ggtitle("Weekly Electiricity Consumption")
autoplot(tsweekly) + ylab("Consumpotion") + ggtitle("Weekly Electiricity Consumption")
weekly <- df %>%  group_by(year,week) %>% summarize(weekly_consumption = mean(consumption))
tsweekly <- ts(weekly$weekly_consumption, frequency = 53, start = c(2016,1))
autoplot(tsweekly) + ylab("Consumpotion") + ggtitle("Weekly Electiricity Consumption")
acf(weekly$weekly_consumption, lag = 53)
pacf(weekly$weekly_consumption, lag = 53)
ggsubseriesplot(tsweekly) +
ylab(" Volume of Electricity Consumption ") +
ggtitle(" Weekly Electricity Consumption ")
print("the additive model")
ur.kpss(decompose(weekly, type = "add")$random)
print("the additive model")
ur.kpss(decompose(tsweekly, type = "add")$random)
print("the multiplicative model")
ur.kpss(decompose(tsweekly, type = "mul")$random)
decomposed_weekly <- decompose(tsweekly, type = "mul")
autoplot(decomposed_weekly)
acf(decomposed_weekly$random, na.action = na.pass)
pacf(decomposed_weekly$random, na.action = na.pass)
acf(decomposed_weekly$random, lag = 53,  na.action = na.pass)
pacf(decomposed_weekly$random, lag = 53,na.action = na.pass)
monthly <- df %>% group_by(year,month) %>% summarize(monthly_consumption = sum(consumption))
tsmonthly <- ts(monthly$monthly_consumption[1:64], frequency = 12, start = c(2016,1))
monthly <- df %>% group_by(year,month) %>% summarize(monthly_consumption = mean(consumption))
tsmonthly <- ts(monthly$monthly_consumption, frequency = 12, start = c(2016,1))
autoplot(tsmonthly)
autoplot(tsmonthly) + ylab("Consumption") + ggtitle(" Monthly Electricity Consumption")
acf(monthly$monthly_consumption, lag = 24 )
pacf(monthly$monthly_consumption, lag = 24)
ggsubseriesplot(tsmonthly) +
ylab(" Volume of Electricity Consumption ") +
ggtitle(" Monthly Electricity Consumption ")
gglagplot(monthly$monthly_consumption, lags = 12)
acf(monthly$monthly_consumption, lag = 24 )
pacf(monthly$monthly_consumption, lag = 24)
gglagplot(monthly$monthly_consumption, lags = 12)
print("the additive model")
ur.kpss(decompose(tsmonthly, type = "add")$random)
print("the multiplicative model")
ur.kpss(decompose(tsmonthly, type = "mul")$random)
decomposed_monthly <-  decompose(tsmonthly, type = "mul")
autoplot(decomposed_monthly)
acf(decomposed_monthly$random, na.action = na.pass)
pacf(decomposed_monthly$random, na.action = na.pass)
acf(df$consumption, lag = 24*7)
pacf(df$consumption, lag = 24*7)
summary(ur.kpss(df$consumption))
acf(df$consumption, lag = 24*7)
pacf(df$consumption, lag = 24*7)
msts_cons<- msts(df$consumption, seasonal.periods = c(24, 24*7))
autoplot
msts_cons<- msts(df$consumption, seasonal.periods = c(24, 24*7))
autoplot(mtst_cons)
msts_cons<- msts(df$consumption, seasonal.periods = c(24, 24*7))
autoplot(msts_cons)
decomposed_msts <- mstl(msts_cons)
autoplot(decomposed_msts)
print("the additive model")
ur.kpss(decompose(ts_data, type = "add")$random)
print("the multiplicative model")
ur.kpss(decompose(ts_data, type = "mul")$random)
decomposed_monthly <-  decompose(tsmonthly, type = "mul")
autoplot(decomposed_monthly)
acf(decomposed_monthly$random, na.action = na.pass)
pacf(decomposed_monthly$random, na.action = na.pass)
ts_data<- ts( df$consumption, frequency = 7*24 , start = c(2016))
autoplot(ts_data)
print("the additive model")
ur.kpss(decompose(ts_data, type = "add")$random)
print("the multiplicative model")
ur.kpss(decompose(ts_data, type = "mul")$random)
add <- decompose(ts_data, type = "add")
add <- decompose(ts_data, type = "add")
autoplot(add) + ggtitle("Additive Decomposition Method")
autoplot(add) + ggtitle("Additive Decomposition Method") + theme_minimal()
acf(add$random, na.action = na.pass)
pacf(add$random, na.action = na.pass)
msts_cons<- msts(df$consumption, seasonal.periods = c(24, 24*7))
autoplot(msts_cons)
msts_cons<- msts(df$consumption, seasonal.periods = c(24, 24*7))
decomposed_msts <- mstl(msts_cons)
autoplot(decomposed_msts)
print("Multiple Seasonal Effect Method")
ur.kpss(randommsts)
randommsts <- decomposed_msts[,5]
acf(randommsts,lag = 24*7, na.action = na.pass)
pacf(randommsts,lag = 24*7, na.action = na.pass)
random <- randommsts
auto.arima(random)
auto.arima(random)
autoplot(decomposed_msts)
ur.kpss(randommsts)
msts_cons<- msts(df$consumption, seasonal.periods = c(24, 24*7))
decomposed_msts <- mstl(msts_cons)
autoplot(decomposed_msts)
print("Multiple Seasonal Effect Method")
ur.kpss(randommsts)
random <- df$consumption- decomposed
acf(randommsts,lag = 24*7, na.action = na.pass)
pacf(randommsts,lag = 24*7, na.action = na.pass)
for (i in 1:5) {
model <- arima( random, oreder(i,0,0))
print( paste("in order (i,0,0) AIC = ", AIC(model)))
}
for (i in 1:5) {
model <- arima( random, order(i,0,0))
print( paste("in order (i,0,0) AIC = ", AIC(model)))
}
for (i in 1:5) {
model <- arima( random, order= C(i,0,0))
print( paste("in order (i,0,0) AIC = ", AIC(model)))
}
model <- arima( random, order= C(1,0,0))
model <- arima( random, order= C(1,0,0), seasonal = FALSE)
class(random)
random <- ts(randommsts)
model <- arima( random, order= C(1,0,0), seasonal = FALSE)
model <- arima( random, C(1,0,0), seasonal = FALSE)
model <- Arima( random, C(1,0,0), seasonal = FALSE)
model <- Arima( random, order = C(1,0,0), seasonal = FALSE)
random <- add$random
arima(random, c(1,0,0), seasonal = FALSE)
random <- df$consumption- add$seasonal - add$trend
arima(random, order = c(1,0,0), seasonal = FALSE)
arima(random, order = c(1,0,0))
arima(add$random, c= c(1,0,0))
arima(add$random,c(1,0,0))
arima(randommsts,c(1,0,0))
arima(randommsts,c(2,0,0))
for (i in 1:5 ){
model <- arima(randommsts,c(i,0,0))
print(paste( " in model order = (",i,0,0 , ") ACF = ", ACF(model)))
}
model <- arima(randommsts,c(i,0,0))
print(paste( " in model order = (",i,0,0 , ") ACF = ", model))
}
model <- arima(randommsts,c(i,0,0))
print(paste( " in model order = (",i,0,0 , ") ACF = ", model$aic))
}
for (i in 1:5 ){
model <- arima(randommsts,c(i,0,0))
print(paste( " in model order = (",i,0,0 , ") ACF = ", model$aic))
}
for (i in 1:5 ){
model <- arima(randommsts,c(0,0,i))
print(paste( " in model order = (",0,0,i , ") ACF = ", model$aic))
}
acf(add$random, na.action = na.pass)
pacf(add$random, na.action = na.pass)
acf(add$random, lag = 24*7,na.action = na.pass)
pacf(add$random,lag = 24*7, na.action = na.pass)
model <- arima(random,c(i,0,0))
print(paste( " in model order = (",i,0,0 , ") ACF = ", model$aic))
for (i in 1:5 ){
model <- arima(random,c(i,0,0))
print(paste( " in model order = (",i,0,0 , ") AIC = ", model$aic))
}
for (i in 1:5 ){
model <- arima(random,c(0,0,i))
print(paste( " in model order = (",0,0,i , ") AIC = ", model$aic))
}
for (i in 1:10 ){
model <- arima(random,c(i,0,0))
print(paste( " in model order = (",i,0,0 , ") AIC = ", model$aic))
AR[i] <- model$aic
}
AR <- rep(0,10)
AR <- rep(0,10)
for (i in 1:10 ){
model <- arima(random,c(i,0,0))
print(paste( " in model order = (",i,0,0 , ") AIC = ", model$aic))
AR[i] <- model$aic
}
plot(AR)
for (i in 1:10 ){
model <- arima(random,c(0,0,i))
print(paste( " in model order = (",0,0,i , ") AIC = ", model$aic))
MA[i] <- aic$model
MA <- rep(0,10)
for (i in 1:10 ){
model <- arima(random,c(0,0,i))
print(paste( " in model order = (",0,0,i , ") AIC = ", model$aic))
MA[i] <- aic$model
}
MA <- rep(0,10)
for (i in 1:10 ){
model <- arima(random,c(0,0,i))
print(paste( " in model order = (",0,0,i , ") AIC = ", model$aic))
MA[i] <- aic$model
}
MA <- rep(0,10)
for (i in 1:10 ){
model <- arima(random,c(0,0,i))
print(paste( " in model order = (",0,0,i , ") AIC = ", model$aic))
MA[i] <- aic$model
}
MA <- rep(0,10)
for (i in 1:10 ){
model <- arima(random,c(0,0,i))
print(paste( " in model order = (",0,0,i , ") AIC = ", model$aic))
MA[i] <- aic$model
plot(AR)
